name: QualityOutreachOpenJDK

on: workflow_dispatch

jobs:

  build:
    name: 'Java ${{ matrix.java }} on ${{ matrix.os }}'
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        java: [ 17, 16, 15, 14 ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: 'Check out repository'
        uses: actions/checkout@v2
      - name: 'Download JDK'
        id: download-jdk
        uses: sormuras/download-jdk@v1
        with:
          feature: ${{ matrix.java }}
      - name: 'Set up JDK, Version ${{ matrix.java }}'
        uses: actions/setup-java@v1
        with:
          java-version: ${{ steps.download-jdk.outputs.version }}
          jdkFile: "${{ steps.download-jdk.outputs.file }}"
      - name: 'Print Java version'
        run: java -version
      - name: 'Build with Maven'
        run: mvn --batch-mode --no-transfer-progress verify

  projects:
    name: 'Project ${{ matrix.project }} on ${{ matrix.os }}'
    needs: [ build ]
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ] # , macos-latest, windows-latest ]
        project: [ Loom, Panama, Valhalla ]
        exclude:
          - { os: macos-latest, project: Valhalla } # missing 'libjli.dylib'
    runs-on: ${{ matrix.os }}
    steps:
      - name: 'Check out repository'
        uses: actions/checkout@v2
      - name: 'Download JDK'
        id: download-jdk
        uses: sormuras/download-jdk@v1
        with:
          feature: ${{ matrix.project }}
      - name: 'Set up JDK, Project ${{ matrix.project }}'
        uses: actions/setup-java@v1
        with:
          java-version: ${{ steps.download-jdk.outputs.version }}
          jdkFile: "${{ steps.download-jdk.outputs.file }}"
      - name: 'Print Java version'
        run: java -version
      - name: 'Build with Maven'
        run: mvn --batch-mode --no-transfer-progress verify
